<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!-- 配置文件的注释 以下的namespace称为命名空间,
 它的值一定是接口的全路径才能实现接口未实现的抽象方法 -->
<mapper namespace="com.web.online.mapper.UserMapper">
<select id="getRow"  resultType="int">
 select count(*) r from t_user where u_role=1
</select>
<!-- 如果数据库的表的列名与实体类的get,set后边的名称不一致，则必须
通过别名的形式来指定别名列 --> 
<select id="queryUserById" resultType="User" parameterType="int" >
select u_id id,u_name name,u_realname realname,u_phone phone,u_regdt regdt,u_mark mark from t_user where u_id=#{value}
</select>
<select id = "lookinfo" resultType = "User" parameterType ="int">
select u_id id,u_name name,u_realname realname,u_phone phone,u_regdt regdt,u_mark mark from t_user where u_id=#{value}
</select>
<insert id="register" parameterType="com.web.online.bean.User">
 insert into t_user(u_name,u_pwd,u_realname,u_phone,u_role,u_mark) 
 values(#{name},#{pwd},#{realname},#{phone},#{role},#{mark})
</insert>
<select id="login"  resultType="String" parameterType="com.web.online.bean.User">
 select u_pwd pwd  from t_user where u_name=#{name} and u_role=#{role}
</select>
<select id="queryUser"  resultType="User" parameterType="com.web.online.bean.User">
 select u_id id,u_name name,u_pwd pwd,u_realname realname,u_phone phone,u_regdt regdt,u_mark mark  from t_user where u_name=#{name} and u_role=#{role}
</select>

<!--<select id="pagination"  resultType="User" parameterType="int">
 select u_id id,u_name name,u_realname realname,u_phone phone,u_regdt regdt,u_mark mark   
 from t_user where u_role=1 limit #{0},#{1}
</select>
--><select id="pagination"  resultType="User" parameterType="int">
 select u_id id,u_name name,u_realname realname,u_phone phone,u_regdt regdt,u_mark mark 
from t_user where u_role=1 limit #{0},#{1}
</select>
<delete id="remove" parameterType="int">
  delete from t_user where u_id=#{value}
</delete>


<update id="modify" parameterType="User">
   update t_user set u_name=#{name},u_pwd=#{pwd},
   u_realname=#{realname},u_phone=#{phone},u_mark=#{mark}
    where u_id=#{id}
</update>
<select id="queryInfoById" parameterType="int" resultType="com.web.online.bean.User">
		select u_id id,u_name name,u_realname realname from t_user where u_id=#{value} 
   	</select>
   	<select id="queryCGradeById" parameterType="int" resultType="com.web.online.bean.User">
		select u_Cgrade cgrade from CHistory
		 where u_id=#{value} 
   	</select>
   	<select id="queryCppGradeById" parameterType="int" resultType="com.web.online.bean.User">
		select u_Cppgrade cppgrade from CppHistory
		 where u_id=#{value} 
   	</select>
   	<select id="queryJavaGradeById" parameterType="int" resultType="com.web.online.bean.User">
		select u_Javagrade javagrade from JavaHistory
		 where u_id=#{value} 
   	</select>
   	<select id="queryNetGradeById" parameterType="int" resultType="com.web.online.bean.User">
		select u_Netgrade netgrade from NetHistory
		 where u_id=#{value} 
   	</select>
   	<select id="queryPythonGradeById" parameterType="int" resultType="com.web.online.bean.User">
		select u_Pythongrade pythongrade from PythonHistory
		 where u_id=#{value} 
   	</select>
	<insert id="insertCGrade" parameterType="com.web.online.bean.User">
		insert into CHistory(u_id,u_Cgrade) values(#{id},#{cgrade})
	</insert>
	<insert id="insertCppGrade" parameterType="com.web.online.bean.User">
		insert into CppHistory(u_id,u_Cppgrade) values(#{id},#{cppgrade})
	</insert>
	<insert id="insertPythonGrade" parameterType="com.web.online.bean.User">
		insert into PythonHistory(u_id,u_Pythongrade) values(#{id},#{pythongrade})
	</insert>
	<insert id="insertJavaGrade" parameterType="com.web.online.bean.User">
		insert into JavaHistory(u_id,u_Javagrade) values(#{id},#{javagrade})
	</insert>
	<insert id="insertNetGrade" parameterType="com.web.online.bean.User">
		insert into NetHistory(u_id,u_Netgrade) values(#{id},#{netgrade})
	</insert>
	<delete id="deleteCHistory" parameterType="Integer">
		delete from CHistory where u_id=#{value};
	</delete>
	<delete id="deleteCppHistory" parameterType="Integer">
		delete from CppHistory where u_id=#{value};
	</delete>
	<delete id="deleteJavaHistory" parameterType="Integer">
		delete from JavaHistory where u_id=#{value};
	</delete>
	<delete id="deleteNetHistory" parameterType="Integer">
		delete from NetHistory where u_id=#{value};
	</delete>
	<delete id="deletePythonHistory" parameterType="Integer">
		delete from PythonHistory where u_id=#{value};
	</delete>
	<delete id="deleteUser" parameterType="Integer">
		delete from t_user where u_id=#{value};
	</delete>


<!-- <update id="updateGrade" parameterType="User">
   update t_user set u_mark=#{mark}
    where u_id=#{id}
</update> -->



</mapper>
